{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Role": {
				"type": "string",
				"enum": [
					"EMPLEADO",
					"ADMIN"
				],
				"description": "Enums"
			},
			"User": {
				"properties": {
					"isActive": {
						"type": "boolean"
					},
					"isValidated": {
						"type": "boolean"
					},
					"companyId": {
						"type": "string"
					},
					"rol": {
						"$ref": "#/components/schemas/Role"
					},
					"password": {
						"type": "string",
						"nullable": true
					},
					"mail": {
						"type": "string"
					},
					"lastName": {
						"type": "string",
						"nullable": true
					},
					"firstName": {
						"type": "string",
						"nullable": true
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"isActive",
					"isValidated",
					"companyId",
					"rol",
					"password",
					"mail",
					"lastName",
					"firstName",
					"id"
				],
				"type": "object",
				"description": "Model User"
			},
			"Company": {
				"properties": {
					"email": {
						"type": "string"
					},
					"creditos": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"creditos",
					"name",
					"id"
				],
				"type": "object",
				"description": "Model Company"
			},
			"Cowork": {
				"properties": {
					"rating": {
						"type": "number",
						"format": "double"
					},
					"phone": {
						"type": "string",
						"nullable": true
					},
					"email": {
						"type": "string",
						"nullable": true
					},
					"name": {
						"type": "string"
					},
					"addressId": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"rating",
					"phone",
					"email",
					"name",
					"addressId",
					"id"
				],
				"type": "object",
				"description": "Model Cowork"
			},
			"CustomError": {
				"properties": {
					"error": {
						"properties": {
							"status": {
								"type": "number",
								"format": "double"
							},
							"code": {
								"type": "string"
							},
							"message": {
								"type": "string"
							}
						},
						"required": [
							"status",
							"code",
							"message"
						],
						"type": "object"
					}
				},
				"required": [
					"error"
				],
				"type": "object"
			},
			"ReturnType_typeofeditSchema.parse_": {
				"properties": {
					"address": {
						"properties": {
							"postalCode": {
								"type": "string"
							},
							"apartment": {
								"type": "string"
							},
							"floor": {
								"type": "string"
							},
							"number": {
								"type": "string"
							},
							"streetName": {
								"type": "string"
							},
							"city": {
								"type": "string"
							},
							"country": {
								"type": "string"
							}
						},
						"type": "object"
					},
					"phone": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Obtain the return type of a function type"
			},
			"EditCoworkInput": {
				"$ref": "#/components/schemas/ReturnType_typeofeditSchema.parse_"
			},
			"ReturnType_typeofcreateSchema.parse_": {
				"properties": {
					"address": {
						"properties": {
							"postalCode": {
								"type": "string"
							},
							"apartment": {
								"type": "string"
							},
							"floor": {
								"type": "string"
							},
							"number": {
								"type": "string"
							},
							"streetName": {
								"type": "string"
							},
							"city": {
								"type": "string"
							},
							"country": {
								"type": "string"
							}
						},
						"type": "object"
					},
					"phone": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"email": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "Obtain the return type of a function type"
			},
			"CreateCoworkInput": {
				"$ref": "#/components/schemas/ReturnType_typeofcreateSchema.parse_"
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "Cowork API",
		"version": "1.0.0",
		"license": {
			"name": "MIT"
		},
		"contact": {
			"name": "r.cabrera - s.rubio - m.soler"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/users": {
			"get": {
				"operationId": "GetUsers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/User"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": []
			}
		},
		"/users/{id}": {
			"get": {
				"operationId": "GetUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"tags": [
					"Users"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/companies": {
			"get": {
				"operationId": "GetCompanies",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Company"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Companies"
				],
				"security": [],
				"parameters": []
			}
		},
		"/companies/{id}": {
			"get": {
				"operationId": "GetCompany",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Company"
										},
										{
											"properties": {
												"employees": {
													"items": {
														"$ref": "#/components/schemas/User"
													},
													"type": "array"
												}
											},
											"required": [
												"employees"
											],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"tags": [
					"Companies"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/coworks": {
			"get": {
				"operationId": "GetCoworks",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Cowork"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Coworks"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "Cowork",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Cowork"
								}
							}
						}
					},
					"406": {
						"description": "Input data not valid",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CustomError"
								}
							}
						}
					}
				},
				"tags": [
					"Coworks"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "CreateCoworkInput",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateCoworkInput",
								"description": "CreateCoworkInput"
							}
						}
					}
				}
			}
		},
		"/coworks/{id}": {
			"get": {
				"operationId": "GetOne",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Cowork"
								}
							}
						}
					},
					"404": {
						"description": "Cowork not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CustomError"
								}
							}
						}
					}
				},
				"tags": [
					"Coworks"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "Edit",
				"responses": {
					"200": {
						"description": "Cowork",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Cowork"
								}
							}
						}
					},
					"404": {
						"description": "Cowork not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CustomError"
								}
							}
						}
					},
					"406": {
						"description": "Input data not valid",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CustomError"
								}
							}
						}
					}
				},
				"tags": [
					"Coworks"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "EditCoworkInput",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/EditCoworkInput",
								"description": "EditCoworkInput"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "Remove",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					},
					"404": {
						"description": "Cowork not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CustomError"
								}
							}
						}
					}
				},
				"tags": [
					"Coworks"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/superadmins/auth": {
			"post": {
				"operationId": "Auth",
				"responses": {
					"200": {
						"description": "Authorized",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"description": "Receives superadmin ID & token and checks if those match the database.",
				"tags": [
					"Super admin auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"id": {
										"type": "string"
									},
									"token": {
										"type": "string"
									}
								},
								"required": [
									"id",
									"token"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/superadmins/login": {
			"post": {
				"operationId": "RequestAuth",
				"responses": {
					"200": {
						"description": "Email sent",
						"content": {
							"application/json": {
								"schema": {
									"type": "boolean"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized"
					}
				},
				"description": "Send login email to the address given if the superadmin user exists",
				"tags": [
					"Super admin auth"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"email": {
										"type": "string"
									}
								},
								"required": [
									"email"
								],
								"type": "object"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}